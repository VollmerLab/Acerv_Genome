select(kegg_path_id, name, description, minor_category, major_category, pathway_map, rel_pathway) %>%
distinct %>%
mutate(kegg_path_id = str_remove(kegg_path_id, 'path:'))
complete_family_species_cafe %>%
filter(FamilyID == 'map00020')
complete_family_species_cafe
#### Significance of KEGG paths ####
read_delim('../../Bioinformatics/Phylogenomics/Time Calibration/cafe_keggPaths/cafeOut/errorModel/Base_family_results.txt',
delim = '\t', show_col_types = FALSE) %>%
rename(FamilyID = `#FamilyID`) %>%
full_join(kegg_paths,
by = c('FamilyID' = 'kegg_path_id')) %>%
filter(is.na(pvalue))
#### Significance of KEGG paths ####
read_delim('../../Bioinformatics/Phylogenomics/Time Calibration/cafe_keggPaths/cafeOut/errorModel/Base_family_results.txt',
delim = '\t', show_col_types = FALSE) %>%
rename(FamilyID = `#FamilyID`) %>%
full_join(kegg_paths,
by = c('FamilyID' = 'kegg_path_id')) %>%
filter(!is.na(pvalue))
#### Significance of KEGG paths ####
read_delim('../../Bioinformatics/Phylogenomics/Time Calibration/cafe_keggPaths/cafeOut/errorModel/Base_family_results.txt',
delim = '\t', show_col_types = FALSE) %>%
rename(FamilyID = `#FamilyID`) %>%
full_join(kegg_paths,
by = c('FamilyID' = 'kegg_path_id')) %>%
filter(!is.na(pvalue),
pvalue < 0.05)
#### Significance of KEGG paths ####
significant_pathways <- read_delim('../../Bioinformatics/Phylogenomics/Time Calibration/cafe_keggPaths/cafeOut/errorModel/Base_family_results.txt',
delim = '\t', show_col_types = FALSE) %>%
rename(FamilyID = `#FamilyID`) %>%
full_join(kegg_paths,
by = c('FamilyID' = 'kegg_path_id')) %>%
filter(!is.na(pvalue),
pvalue < 0.05)
significant_pathways %>%
group_by(major_category, minor_category) %>%
summarise(n_path = n_distinct(name))
significant_pathways %>%
group_by(major_category, minor_category) %>%
summarise(n_path = n_distinct(name),
.groups = 'drop')
kegg_paths
#### Significance of KEGG paths ####
pathway_changes <- read_delim('../../Bioinformatics/Phylogenomics/Time Calibration/cafe_keggPaths/cafeOut/errorModel/Base_family_results.txt',
delim = '\t', show_col_types = FALSE) %>%
rename(FamilyID = `#FamilyID`) %>%
full_join(kegg_paths,
by = c('FamilyID' = 'kegg_path_id')) %>%
filter(!is.na(pvalue),
pvalue < 0.05)
#### Significance of KEGG paths ####
pathway_changes <- read_delim('../../Bioinformatics/Phylogenomics/Time Calibration/cafe_keggPaths/cafeOut/errorModel/Base_family_results.txt',
delim = '\t', show_col_types = FALSE) %>%
rename(FamilyID = `#FamilyID`) %>%
full_join(kegg_paths,
by = c('FamilyID' = 'kegg_path_id'))
pathway_changes
pathway_changes %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(name[pvalue < 0.05]),
tested_paths = n_distinct(name[!is.na(pvalue)]),
total_paths = n_distinct(name),
untested_paths = n_distinct(name[is.na(pvalue)]),
.groups = 'drop')
pathway_changes %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(name[pvalue < 0.05]),
tested_paths = n_distinct(name[!is.na(pvalue)]),
total_paths = n_distinct(name),
untested_paths = n_distinct(name[is.na(pvalue)]),
.groups = 'drop') %>%
ggplot(aes(x = sig_paths / tested_paths, y = minor_category)) +
geom_point() +
facet_wrap(~major_category)
pathway_changes %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(name[pvalue < 0.05]),
tested_paths = n_distinct(name[!is.na(pvalue)]),
total_paths = n_distinct(name),
untested_paths = n_distinct(name[is.na(pvalue)]),
.groups = 'drop') %>%
ggplot(aes(x = sig_paths / tested_paths, y = minor_category)) +
geom_point() +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes
pathway_changes %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(name[pvalue < 0.05]),
tested_paths = n_distinct(name[!is.na(pvalue)]),
total_paths = n_distinct(name),
untested_paths = n_distinct(name[is.na(pvalue)]),
.groups = 'drop') %>%
filter(tested_paths > sig_paths)
pathway_changes %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(name[pvalue < 0.05]),
tested_paths = n_distinct(name[!is.na(pvalue)]),
total_paths = n_distinct(name),
untested_paths = n_distinct(name[is.na(pvalue)]),
.groups = 'drop') %>%
filter(tested_paths < sig_paths)
pathway_changes %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(name[pvalue < 0.05]),
tested_paths = n_distinct(name[!is.na(pvalue)]),
total_paths = n_distinct(name),
untested_paths = n_distinct(name[is.na(pvalue)]),
.groups = 'drop') %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = sig_paths / tested_paths, y = minor_category, colour = (sig_paths / tested_paths) > 1)) +
geom_point() +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
filter(minor_category == 'Development and regeneration')
pathway_changes %>%
filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop')
pathway_changes %>%
filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
mutate(tested_paths = total_paths - untested_paths)
pathway_changes %>%
filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop')
pathway_changes %>%
filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
filter(pvalue < 0.05)
pathway_changes %>%
filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = sig_paths / tested_paths, y = minor_category, colour = (sig_paths / tested_paths) > 1)) +
geom_point() +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = sig_paths / tested_paths, y = minor_category)) +
geom_point() +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = sig_paths, y = minor_category)) +
geom_point() +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = sig_paths / tested_paths, y = minor_category)) +
geom_segment(aes(xend = 0)) +
geom_point() +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = sig_paths / tested_paths, y = minor_category)) +
geom_segment(aes(xend = 0, yend = minor_category)) +
geom_point() +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = sig_paths, y = minor_category)) +
geom_segment(aes(xend = 0, yend = minor_category)) +
geom_point() +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths'))
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'))
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name = 'total' ~ 'Total'))
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'))
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = c('Significant', 'Tested', 'Total')))
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = c('Significant', 'Tested', 'Total'))) %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = value, y = minor_category, colour = name)) +
geom_segment(aes(xend = 0, yend = minor_category),
positon = position_dodge(0.5)) +
geom_point(positon = position_dodge(0.5)) +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = c('Significant', 'Tested', 'Total'))) %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = value, y = minor_category, colour = name)) +
geom_segment(aes(xend = 0, yend = minor_category),
position = position_dodge(0.5)) +
geom_point(position = position_dodge(0.5)) +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = rev(c('Significant', 'Tested', 'Total')))) %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = value, y = minor_category, colour = name)) +
geom_segment(aes(xend = 0, yend = minor_category),
position = position_dodge(0.5)) +
geom_point(position = position_dodge(0.5)) +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = rev(c('Significant', 'Tested', 'Total')))) %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = value, y = minor_category, colour = name)) +
geom_segment(aes(xend = 0, yend = minor_category),
position = position_dodge(0.5)) +
geom_point(position = position_dodge2(0.5)) +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = rev(c('Significant', 'Tested', 'Total')))) %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = value, y = minor_category, colour = name)) +
geom_segment(aes(xend = 0, yend = minor_category),
position = position_dodge2(0.5)) +
geom_point(position = position_dodge(0.5)) +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = rev(c('Significant', 'Tested', 'Total')))) %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = value, y = minor_category, colour = name)) +
geom_linerange(aes(xmin = 0, xmax = value),
position = position_dodge2(0.5)) +
geom_point(position = position_dodge(0.5)) +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = rev(c('Significant', 'Tested', 'Total')))) %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = value, y = minor_category, colour = name)) +
geom_linerange(aes(xmin = 0, xmax = value),
position = position_dodge(0.5)) +
geom_point(position = position_dodge(0.5)) +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = rev(c('Significant', 'Tested', 'Total')))) %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = value, y = minor_category, colour = name)) +
geom_linerange(aes(xmin = 0, xmax = value),
position = position_dodge(0.1)) +
geom_point(position = position_dodge(0.1)) +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = rev(c('Significant', 'Tested', 'Total')))) %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = value, y = minor_category, colour = name)) +
geom_linerange(aes(xmin = 0, xmax = value),
position = position_dodge(0.5)) +
geom_point(position = position_dodge(0.5)) +
facet_wrap(~major_category, scales = 'free_y')
pathway_changes %>%
# filter(minor_category == 'Development and regeneration') %>%
group_by(major_category, minor_category) %>%
summarise(sig_paths = n_distinct(FamilyID[pvalue < 0.05 & !is.na(pvalue)]),
tested_paths = n_distinct(FamilyID[!is.na(pvalue)]),
total_paths = n_distinct(FamilyID),
untested_paths = n_distinct(FamilyID[is.na(pvalue)]),
.groups = 'drop') %>%
select(-untested_paths) %>%
pivot_longer(cols = ends_with('paths')) %>%
mutate(name = str_remove(name, '_paths'),
name = case_when(name == 'sig' ~ 'Significant',
name == 'tested' ~ 'Tested',
name == 'total' ~ 'Total'),
name = factor(name, levels = rev(c('Significant', 'Tested', 'Total')))) %>%
# filter(tested_paths < sig_paths)
ggplot(aes(x = value, y = minor_category, colour = name)) +
geom_linerange(aes(xmin = 0, xmax = value),
position = position_dodge(0.5)) +
geom_point(position = position_dodge(0.5)) +
facet_wrap(~major_category, scales = 'free_y') +
theme_classic() +
theme(panel.background = element_rect(colour = 'black'),
strip.background = element_blank())
